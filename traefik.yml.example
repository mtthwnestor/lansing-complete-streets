http:
  middlewares:
    # Redirect non-www URLs to their www equivalent
    # Use with traefik.http.routers.myRouter.middlewares: "redirect-non-www-to-www@file"
    redirect-non-www-to-www:
      # Redirect a request from an url to another with regex matching and replacement
      redirectregex:
        # Apply a permanent redirection (HTTP 301)
        permanent: true
        # The regular expression to match and capture elements from the request URL
        regex: "^https?://(?:www\\.)?(.+)"
        # How to modify the URL to have the new target URL
        replacement: "https://www.${1}"

    # Redirect www URLs to their non-www equivalent
    # Use with traefik.http.routers.myRouter.middlewares: "redirect-www-to-non-www@file"
    redirect-www-to-non-www:
      # Redirect a request from an url to another with regex matching and replacement
      redirectregex:
        # Apply a permanent redirection (HTTP 301)
        permanent: true
        # The regular expression to match and capture elements from the request URL
        regex: "^https?://www\\.(.+)"
        # How to modify the URL to have the new target URL
        replacement: "https://${1}"

  routers:
    Org.LansingCompleteStreets:
      entrypoints:
        - "websecure"
      rule: "Host(`lansingcompletestreets.org`)"
      tls:
        certResolver: letsencrypt
      middlewares:
        - redirect-non-www-to-www
      service: org.lansingcompletestreets.www
    Org.LansingCompleteStreets.Www:
      entryPoints:
        - "websecure"
      rule: "Host(`www.lansingcompletestreets.org`)"
      tls:
        certResolver: letsencrypt
      service: org.lansingcompletestreets.www

  services:
    org.lansingcompletestreets.www:
      loadBalancer:
        servers:
          - url: "http://192.168.1.4:4278"

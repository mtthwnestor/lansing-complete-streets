# Build with: docker build -t my-app-test -f Dockerfile.testing .
# Use the image to run and test your app in a clean and consistent environment.
# Example: docker run --rm -it -p 3000:3000 my-app-test
FROM ruby:3.1.2-alpine3.16

# Add required system packages.
RUN apk add --no-cache build-base tzdata nodejs yarn sqlite-dev git nano

# Add user and configure directory.
RUN adduser -D rails
USER rails
WORKDIR /app

# To copy files as our new user, use "--chown=rails"
COPY --chown=rails . .

# Configure Ruby environment and install gems.
ENV GEM_HOME=/home/rails/gems
ENV PATH="/home/rails/gems/bin:$PATH"
RUN gem install rails:7.0.4 bundler:2.3.23

# Configure rails environment.
ENV RAILS_ENV=test
ENV RAILS_SERVE_STATIC_FILES=true
#ENV RAILS_MASTER_KEY=0123456789abcdefghij0123456789ab

RUN bundle config set without 'development' && bundle install --jobs=3 --retry=3
RUN rails assets:clobber assets:precompile

EXPOSE 3000
ENTRYPOINT [ "/app/entrypoint.sh" ]
